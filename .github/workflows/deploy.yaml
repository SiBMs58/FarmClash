name: Deploy to Google Cloud

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.PERSONALACCESSTOKEN }}

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}

    - name: Add host to known_hosts
      run: |
        ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to VM
      run: |
        ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} << EOF
          sudo -u app bash -c '
            set -e  # Stop execution on any error
            
            # Navigate to the application directory
            echo "Navigating to the application directory..."
            cd /home/app/FarmClash
    
            # Pull the latest changes from the repository
            echo "Pulling the latest changes from the repository..."
            git pull https://github.com/SiBMs58/FarmClash.git
        
            # Check for database migration needs
            echo "Checking for database migrations..."
            # TODO
            
            # Activate the Python virtual environment and update dependencies
            echo "Activating the Python virtual environment and updating dependencies..."
            source env/bin/activate && pip install -r requirements.txt
          
            # Deactivate the virtual environment
            echo "Deactivating the virtual environment..."
            deactivate
            
            # Restart the Gunicorn service
            echo "Starting or restarting Gunicorn service..."
            sudo systemctl restart webapp
    
            # Checking the status of the Gunicorn service
            echo "Checking the status of the Gunicorn service..."
            sudo systemctl status webapp
        
            # Checking the webapp domain name
            echo "Checking the webapp domain name..."
            curl -f team3.ua-ppdb.me || echo "Health check failed!"
            
            # Optional: Checking webapp logs (commented out by default)
            # echo "Checking the webapp logs..."
            # sudo journalctl -u webapp | tail
          '
        EOF